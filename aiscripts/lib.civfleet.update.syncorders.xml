<?xml version="1.0" encoding="utf-8"?>
<!-- 
Given two ships, copies the civilian default order of one ship to the other ship.
The type of order to sync depends on the assignment.
-->
<aiscript name="lib.civfleet.update.syncorders" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="aiscripts.xsd">
    <params>
        <param name="fromShip" default="null" comment="The ship from which the command is extracted."/>
        <param name="toShip" default="null" comment="The ship to which the command is applied." />
    </params>
    <attention min="unknown">
        <actions>
            <do_if value="$fromShip == null or $toShip == null">
                <show_help custom="'Source and/or target be null! Cannot sync!'" position="1" duration="3s" chance="0" />
                <resume label="return"/>
            </do_if>

            <do_if value="not $fromShip.isclass.ship">
                <show_help custom="'Source is not a ship! Improper action.'" position="1" duration="3s" chance="0" />
                <resume label="return"/>
            </do_if>

            <!--show_help custom="'Syncing orders from ' + $fromShip.knownname + ' to ' + $toShip.knownname" position="1" duration="4s" /-->

            <!-- Caching to allow faster script execution. -->
            <set_value name="$assignmentSkillLevel" exact="[$fromShip.pilot.skill.management, $toShip.pilot.skill.piloting].max / 3" comment="The 'skill level' designated by vanilla game, if it were to assign a ship to a station." />
            <set_value name="$fromShip_DefaultOrder" exact="$fromShip.defaultorder" />

            <!--
            Note to self:
            Suppose the Commander is operating at Skill Level 2. (Denoted as SL-2)
            There exists cases where the joining ship can operate at (e.g.) SL-5.
                In such cases, set the joining ship to operate at SL-2, same as Commander. It's natural.
            There also exists cases where the joining ship can only operate at (e.g.) SL-1 (or even lower).
                This can occur when the Commander has exceptionally crappy Management skill, and the Subordinate having crappy Piloting skill too.
                (This does not guarantee that the Commander also has crappy Piloting skill! Overall skill can still be good!)
                The UI will explode if we attempt to set it to SL-2, so in such cases, set it at SL-1 (i.e., max capable).
            -->
            <do_if value="$toShip.assignment == assignment.mining">
                <!-- Even though there are several different versions of mining scripts, they all have the same list of parameters. -->
                <run_script name="'lib.civfleet.check.orderismining'" result="$isMiningOrder">
                    <param name="order" value="$fromShip_DefaultOrder" />
                </run_script>
                <do_if value="$isMiningOrder">
                    <!-- First obtain the MAX parameters, cap them to valid values. -->
                    <set_value name="$maxBuy" exact="[$fromShip_DefaultOrder.$maxbuy, $assignmentSkillLevel].min" />
                    <set_value name="$maxSell" exact="[$fromShip_DefaultOrder.$maxsell, $assignmentSkillLevel].min" />

                    <!-- Then obtain and cap the MIN parameters -->
                    <set_value name="$minBuy" exact="[$fromShip_DefaultOrder.$minbuy, $maxBuy].min" />
                    <set_value name="$minSell" exact="[$fromShip_DefaultOrder.$minsell, $maxSell].min" />
                    
                    <!-- As to the 'effective skill' parameter... -->
                    <!-- ge: greater than or equal to -->
                    <set_value name="$combinedSkill" />
                    <do_if value="$fromShip.combinedskill ge $toShip.combinedskill">
                        <!-- If commander is better than subordinate, subordinate can do it themselves. -->
                        <set_value name="$combinedSkill" exact="$toShip.combinedskill"/>
                    </do_if>
                    <do_else>
                        <!-- Take average otherwise. -->
                        <set_value name="$combinedSkill" exact="($fromShip.combinedskill + $toShip.combinedskill) / 2"/>
                    </do_else>

                    <create_order object="$toShip" id="'MiningRoutine'" default="true">
                        <!-- In v2.5, only maxbuy and maxsell can be modified by the user. -->
                        <!-- Hence, configuring minbuy and minsell becomes meaningless. -->
                        <param name="warebasket" value="$fromShip_DefaultOrder.$warebasket" />
                        <param name="range" value="$fromShip_DefaultOrder.range" />
                        <param name="minbuy" value="$minBuy" />
                        <param name="minsell" value="$minSell" />
                        <param name="maxbuy" value="$maxBuy" />
                        <param name="maxsell" value="$maxSell" />
                        <param name="effectiveskill" value="$combinedSkill" />
                    </create_order>
                    <set_order_syncpoint_reached order="$toShip.order"/>
                </do_if>
            </do_if>
            <do_elseif value="$toShip.assignment == assignment.trade">
                <!-- Make sure the fromShip really is trading -->
                <do_if value="$fromShip_DefaultOrder.id == 'TradeRoutine'">
                    <set_value name="$maxBuy" exact="[$fromShip_DefaultOrder.$maxbuy, $assignmentSkillLevel].min" />
                    <set_value name="$maxSell" exact="[$fromShip_DefaultOrder.$maxsell, $assignmentSkillLevel].min" />

                    <create_order object="$toShip" id="'TradeRoutine'" default="true">
                        <!-- In v2.5, only maxbuy and maxsell can be modified by the user. -->
                        <!-- Hence, configuring minbuy and minsell becomes meaningless. -->
                        <param name="warebasket" value="$fromShip.defaultorder.$warebasket" />
                        <param name="maxbuy" value="$maxBuy" />
                        <param name="maxsell" value="$maxSell" />
                    </create_order>
                    <set_order_syncpoint_reached order="$toShip.order"/>
                </do_if>
            </do_elseif>
            <do_else>
                <debug_text text="'Assignment unrecognized by CivFleet. Cancelling sync from ' + $fromShip.knownname + ' (' + $fromShip + ') to ' + $toShip.knownname + ' (' + $toShip + ') via assignment ' + $toShip.assignment + '.'" />
            </do_else>

            <label name="return"/>
        </actions>
    </attention>
</aiscript>